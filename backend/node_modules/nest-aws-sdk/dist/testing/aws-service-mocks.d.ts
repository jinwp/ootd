/// <reference types="jest" />
import { AwsService, AsyncModuleProvider } from '../lib/types';
import { Provider } from '@nestjs/common';
import { TestingModule } from '@nestjs/testing';
export declare function createAwsServiceMock(service: AwsService, provider: AsyncModuleProvider<AwsService>): Provider<AwsService>;
export declare function getAwsServiceMock(module: TestingModule, service: AwsService): any;
export declare function createAwsServicePromisableFunction<T>(response: 'reject' | 'resolve', result?: T): {
    promise(): Promise<Awaited<T>>;
};
export declare function createAwsServicePromisableSpy<T, K>(object: T, method: jest.FunctionPropertyNames<Required<T>>, response: 'reject' | 'resolve', result?: K): Required<T>[jest.FunctionPropertyNames<Required<T>>] extends (...args: any[]) => any ? jest.SpyInstance<ReturnType<Required<T>[jest.FunctionPropertyNames<Required<T>>]>, jest.ArgsType<Required<T>[jest.FunctionPropertyNames<Required<T>>]>> : never;
